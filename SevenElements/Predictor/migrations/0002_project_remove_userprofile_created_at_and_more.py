# Generated by Django 4.2.6 on 2025-03-31 23:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Predictor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_title', models.CharField(max_length=200)),
                ('project_type', models.CharField(max_length=100)),
                ('planned_budget', models.DecimalField(decimal_places=2, max_digits=15)),
                ('actual_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('planned_schedule', models.IntegerField()),
                ('planned_scope', models.TextField()),
                ('actual_schedule', models.IntegerField(blank=True, null=True)),
                ('actual_scope', models.TextField(blank=True, null=True)),
                ('project_manager_title', models.CharField(max_length=100)),
                ('project_manager_skill_level', models.CharField(max_length=50)),
                ('project_info_score', models.FloatField(blank=True, null=True)),
                ('resource_utilization_score', models.FloatField(blank=True, null=True)),
                ('total_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='created_at',
        ),
        migrations.AddField(
            model_name='userprofile',
            name='organization_name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_role',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='first_name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='last_name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='phone_number',
            field=models.CharField(max_length=15),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='TechnicalPractices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('development_methodology', models.CharField(max_length=100)),
                ('devops_adoption', models.FloatField()),
                ('automated_testing_coverage', models.FloatField()),
                ('cicd_pipeline_usage', models.FloatField()),
                ('code_review_process', models.FloatField()),
                ('technical_debt_level', models.FloatField()),
                ('cloud_based_development', models.BooleanField(default=False)),
                ('security_practices', models.FloatField()),
                ('technical_score', models.FloatField(blank=True, null=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='technical_practices', to='Predictor.project')),
            ],
        ),
        migrations.CreateModel(
            name='TeamComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_size', models.IntegerField()),
                ('avg_experience_level', models.FloatField()),
                ('senior_to_junior_ratio', models.FloatField()),
                ('stability_score', models.FloatField(blank=True, null=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='team_composition', to='Predictor.project')),
            ],
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_risk_score', models.FloatField(blank=True, null=True)),
                ('risk_factors', models.TextField()),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='risk', to='Predictor.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectEnvironment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leadership_support', models.FloatField()),
                ('team_collaboration_level', models.FloatField()),
                ('stakeholder_engagement', models.FloatField()),
                ('work_life_balance', models.FloatField()),
                ('psychological_safety_score', models.FloatField()),
                ('resource_availability', models.FloatField()),
                ('turnover_rate', models.FloatField()),
                ('environment_score', models.FloatField(blank=True, null=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='project_environment', to='Predictor.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProductivityEfficiency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_sprint_completion_rate', models.FloatField()),
                ('task_completion_rate', models.FloatField()),
                ('expected_velocity', models.FloatField()),
                ('estimated_cycle_time', models.IntegerField()),
                ('defect_rate', models.FloatField()),
                ('dependencies_blocked', models.IntegerField()),
                ('productivity_score', models.FloatField(blank=True, null=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='productivity_efficiency', to='Predictor.project')),
            ],
        ),
    ]
